// @generated by protobuf-ts 2.8.1 with parameter long_type_string
// @generated from protobuf file "parcel-service.proto" (package "pb", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ParcelService } from "./parcel-service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { HelloResponse } from "./common";
import type { HelloRequest } from "./common";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service pb.ParcelService
 */
export interface IParcelServiceClient {
    /**
     * @generated from protobuf rpc: Hello(pb.HelloRequest) returns (pb.HelloResponse);
     */
    hello(input: HelloRequest, options?: RpcOptions): UnaryCall<HelloRequest, HelloResponse>;
}
/**
 * @generated from protobuf service pb.ParcelService
 */
export class ParcelServiceClient implements IParcelServiceClient, ServiceInfo {
    typeName = ParcelService.typeName;
    methods = ParcelService.methods;
    options = ParcelService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Hello(pb.HelloRequest) returns (pb.HelloResponse);
     */
    hello(input: HelloRequest, options?: RpcOptions): UnaryCall<HelloRequest, HelloResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<HelloRequest, HelloResponse>("unary", this._transport, method, opt, input);
    }
}
